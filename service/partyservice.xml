<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">

    <service verb="find" noun="Party">
        <out-parameters>
            <parameter name="party" type="list"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="Party" list="party"/>
            <if condition="!party">
                <then>
                    <return message="No such party Exists"/>
                </then>
            </if>
        </actions>
    </service>

    <service verb="find" noun="AParty">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="party" type="list"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party"/>
            <if condition="!party">
                <then>
                    <return message="No such Party Exists"/>
                </then>
            </if>
        </actions>
    </service>

    <service verb="create" noun="Party" type="entity-auto">
        <in-parameters>
            <auto-parameters include="nonpk"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters include="pk"/>
        </out-parameters>
    </service>

    <service verb="put" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
            <parameter name="partyType" required="true"/>
            <parameter name="firstName"/>
            <parameter name="lastName"/>
        </in-parameters>
        <out-parameters>
            <parameter name="party"/>
            <parameter name="successMessage"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="tutorial.Party" value-field="party">
                <field-map field-name="partyId" value="$partyId"/>
            </entity-find-one>

            <if condition="party">
                <then>
                    <set field="party.partyType" from="partyType"/>
                    <set field="party.firstName" from="firstName"/>
                    <set field="party.lastName" from="lastName"/>
                    <entity-update value-field="party"/>
                </then>
                <set field="successMessage" value="Party Updated Successfully"/>
            </if>
        </actions>
    </service>

    <service verb="delete" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="message"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party"/>
            <if condition="!party">
                <return message="Party does not exists"/>
            </if>
            <entity-find-one entity-name="OrderHeader" value-field="order">
                <field-map field-name="partyId" from="partyId"/>
            </entity-find-one>
            <if condition="order">
                <return message="Cannot delete this party because it has orders"/>
            </if>
            <entity-find-one entity-name="ContactMech" value-field="contact">
                <field-map field-name="partyId" from="partyId"/>
            </entity-find-one>
            <if condition="contact">
                <then>
                    <entity-delete-related value-field="party"  relationship-name="Party#tutorial.ContactMech"/>
                </then>
            </if>
            <entity-delete-by-condition entity-name="Party" >
                <econdition field-name="partyId"/>
            </entity-delete-by-condition>
            <set field="message" value="Party Deleted Successfully"/>
        </actions>
    </service>

</services>